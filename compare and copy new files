#Declare output log file
$output_file = "C:\temp\Logs\copy_files_$(get-date -f yyyy-MM-dd-HH-mm)_log.log"

#Declare temporary output file to store verbose results in it, then will move results into main output file.
$temp_output = "C:\temp\Logs\temp_copy_files_log.log"
#Start-Transcript -Path $out_File


# Enter source directory
$source = 'C:\SQLBackup\NB0168\'
if($source[-1] -ne "\") {$source += "\"}  #adding backslash if not exists at end

# Enter destination directory
$destination = 'C:\SQLBackup\NB0169\'
if($destination[-1] -ne "\") {$destination += "\"}  #adding backslash if not exists at end

#$file_list = Get-ChildItem -Path $source  -Recurse -Directory -Force -ErrorAction SilentlyContinue | ForEach-Object{  Get-ChildItem -Path $_.FullName|Where-Object{$_.Mode -eq '-a----'}|Select-Object Name, mode, directory, FullName}
Try{
	#checking source and destination directories
	If(!(Test-Path -Path $source )){
		Write-Output "$([DateTime]::Now) : Please choose valid source($source) directory."| Out-File $output_file -Append
		#exit
		Break
	}elseif(!(Test-Path -Path $destination )){
		Write-Output "$([DateTime]::Now) : Please choose valid destination($destination) directory." | Out-File $output_file -Append
		#exit
		Break
	}
	$file_list = Get-ChildItem -Path $source  -Recurse -Directory -Force -ErrorAction Stop | ForEach-Object{  Get-ChildItem -Path $_.FullName|Where-Object{$_.Mode -eq '-a----'}|Select-Object Name, mode, directory, FullName}
	
	#verifying source directory whether have files or not.
	if($file_list.Count -eq 0){
		Write-Output "No files are available to copy. Please check source directory." | Out-File $output_file -Append -encoding utf8
		Break
	}

	$file_list|foreach{$copy_file = $_.FullName.replace($source, $destination)
		If(Test-Path -Path $copy_file){
			Write-Output "File $_ is exists in the destination directory." | Out-File $output_file -Append -encoding utf8
		}
		Else{
			$dest_folder = $copy_file.replace($_.name,'')
			If(!(Test-Path -Path $dest_folder)){
				mkdir $dest_folder 
				"$([DateTime]::Now) : Created new directory $dest_folder"| Out-File $output_file -Append
			}
			"Copy process started at " + "$([DateTime]::Now)" | out-file $output_file -Append
			# copy files, storing output in a temp log file. Data in this file is flushed once another file is copying.
			Copy-Item -path $_.FullName -Destination ($dest_folder) -verbose *> $temp_output -encoding utf8
			
			#appending temp log file information into output file.
			Get-Content $temp_output | Out-File $output_file -Append
			"Copy process ended at " + "$([DateTime]::Now) `n" | out-file $output_file -Append		 -encoding utf8
		}	
	}
}catch [System.Exception]{
	"An error occured while trying to process files. Please check the manual!" | Out-File $output_file -Append -encoding utf8
	$_ | Out-File $output_file -Append
}
